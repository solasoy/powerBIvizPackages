{"version":3,"sources":["webpack://spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871/webpack/bootstrap","webpack://spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871/./src/htmlInjectionUtility.ts","webpack://spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871/../src/dataViewObjects.ts","webpack://spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871/../src/dataViewObject.ts","webpack://spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871/./src/settings.ts","webpack://spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871/external \"Function('return this')()\"","webpack://spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871/./src/visual.ts","webpack://spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871/../src/dataViewObjectsParser.ts","webpack://spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871/../src/index.ts","webpack://spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871/./.tmp/precompile/visualPlugin.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","injectorCounter","ResetInjector","ParseElement","el","target","arr","hasChildNodes","nodes","children","length","tempNode","item","nodeName","toLowerCase","createScriptNode","cloneNode","appendChild","push","refNode","script","document","createElement","attr","attributes","setAttribute","textContent","onload","innerHTML","RunHTMLWidgetRenderer","intervalVar","window","setInterval","clearInterval","staticRender","DataViewObjectsParser","VisualSettings","rcv_script","rcv_scriptSettings","Function","VisualUpdateType","renderVisualUpdateType","Resize","ResizeEnd","Visual","options","element","this","rootElement","headNodes","bodyNodes","dataView","parse","type","viewport","dataViews","settings","parseSettings","payloadBase64","scriptResult","indexOf","injectCodeFromPayload","onResizing","finalViewport","atob","err","pop","head","removeChild","headList","getElementsByTagName","bodyList","body","enumerateObjectInstances","getDefault","powerbi","spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871","displayName","class","version","apiVersion","console","error","custom","visuals","plugins"],"mappings":"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","file":"visual.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"assets\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","\"use strict\";\nlet injectorCounter: number = 0;\nexport function ResetInjector(): void {\n  injectorCounter = 0;\n}\n\nexport function injectorReady(): boolean {\n  return injectorCounter === 0;\n}\nexport function ParseElement(el: HTMLElement, target: HTMLElement): Node[] {\n  let arr: Node[] = [];\n  if (!el || !el.hasChildNodes()) {\n    return;\n  }\n  let nodes: HTMLCollection = el.children;\n  for (let i: number = 0; i < nodes.length; i++) {\n    let tempNode: HTMLElement;\n    if (nodes.item(i).nodeName.toLowerCase() === \"script\") {\n      tempNode = createScriptNode(nodes.item(i));\n    } else {\n      tempNode = <HTMLElement>nodes.item(i).cloneNode(true);\n    }\n    target.appendChild(tempNode);\n    arr.push(tempNode);\n  }\n  return arr;\n}\n\nfunction createScriptNode(refNode: Element): HTMLElement {\n  let script: HTMLScriptElement = document.createElement(\"script\");\n  let attr: NamedNodeMap = refNode.attributes;\n  for (let i: number = 0; i < attr.length; i++) {\n    script.setAttribute(attr[i].name, attr[i].textContent);\n    if (attr[i].name.toLowerCase() === \"src\") {\n      // waiting only for src to finish loading - async opetation\n      injectorCounter++;\n      script.onload = () => {\n        injectorCounter--;\n      };\n    }\n  }\n  script.innerHTML = refNode.innerHTML;\n  return script;\n}\n\nexport function RunHTMLWidgetRenderer(): void {\n  // rendering HTML which was created by HTMLWidgets package\n  // wait till all tje script elements are loaded\n  let intervalVar: number = window.setInterval(() => {\n    if (injectorReady()) {\n      window.clearInterval(intervalVar);\n      if (window.hasOwnProperty(\"HTMLWidgets\") && window[\"HTMLWidgets\"].staticRender) {\n        window[\"HTMLWidgets\"].staticRender();\n      }\n    }\n  }, 100);\n}","import * as DataViewObject from \"./dataViewObject\";\r\n/** Gets the value of the given object/property pair. */\r\nexport function getValue(objects, propertyId, defaultValue) {\r\n    if (!objects) {\r\n        return defaultValue;\r\n    }\r\n    return DataViewObject.getValue(objects[propertyId.objectName], propertyId.propertyName, defaultValue);\r\n}\r\n/** Gets an object from objects. */\r\nexport function getObject(objects, objectName, defaultValue) {\r\n    if (objects && objects[objectName]) {\r\n        return objects[objectName];\r\n    }\r\n    return defaultValue;\r\n}\r\n/** Gets the solid color from a fill property. */\r\nexport function getFillColor(objects, propertyId, defaultColor) {\r\n    const value = getValue(objects, propertyId);\r\n    if (!value || !value.solid) {\r\n        return defaultColor;\r\n    }\r\n    return value.solid.color;\r\n}\r\nexport function getCommonValue(objects, propertyId, defaultValue) {\r\n    const value = getValue(objects, propertyId, defaultValue);\r\n    if (value && value.solid) {\r\n        return value.solid.color;\r\n    }\r\n    if (value === undefined\r\n        || value === null\r\n        || (typeof value === \"object\" && !value.solid)) {\r\n        return defaultValue;\r\n    }\r\n    return value;\r\n}\r\n//# sourceMappingURL=dataViewObjects.js.map","export function getValue(object, propertyName, defaultValue) {\r\n    if (!object) {\r\n        return defaultValue;\r\n    }\r\n    let propertyValue = object[propertyName];\r\n    if (propertyValue === undefined) {\r\n        return defaultValue;\r\n    }\r\n    return propertyValue;\r\n}\r\n/** Gets the solid color from a fill property using only a propertyName */\r\nexport function getFillColorByPropertyName(object, propertyName, defaultColor) {\r\n    let value = getValue(object, propertyName);\r\n    if (!value || !value.solid) {\r\n        return defaultColor;\r\n    }\r\n    return value.solid.color;\r\n}\r\n//# sourceMappingURL=dataViewObject.js.map","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\n\"use strict\";\n\nimport { dataViewObjectsParser } from \"powerbi-visuals-utils-dataviewutils\";\nimport DataViewObjectsParser = dataViewObjectsParser.DataViewObjectsParser;\n\nexport class VisualSettings extends DataViewObjectsParser {\n      public rcv_script: rcv_scriptSettings = new rcv_scriptSettings();\n      }\n\n    export class rcv_scriptSettings {\n     // undefined\n      public provider     // undefined\n      public source     }\n\n","module.exports = Function('return this')();","/*\n*  Power BI Visual CLI\n*\n*  Copyright (c) Microsoft Corporation\n*  All rights reserved.\n*  MIT License\n*\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\n*  in the Software without restriction, including without limitation the rights\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*  copies of the Software, and to permit persons to whom the Software is\n*  furnished to do so, subject to the following conditions:\n*\n*  The above copyright notice and this permission notice shall be included in\n*  all copies or substantial portions of the Software.\n*\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*  THE SOFTWARE.\n*/\n\"use strict\";\nimport powerbi from \"powerbi-visuals-api\";\nimport VisualConstructorOptions = powerbi.extensibility.visual.VisualConstructorOptions;\nimport VisualUpdateOptions = powerbi.extensibility.visual.VisualUpdateOptions;\nimport IVisual = powerbi.extensibility.visual.IVisual;\nimport EnumerateVisualObjectInstancesOptions = powerbi.EnumerateVisualObjectInstancesOptions;\nimport VisualObjectInstance = powerbi.VisualObjectInstance;\nimport DataView = powerbi.DataView;\nimport IViewport = powerbi.IViewport;\nimport VisualObjectInstanceEnumerationObject = powerbi.VisualObjectInstanceEnumerationObject;\n\nimport { VisualSettings } from \"./settings\";\nimport { ParseElement, ResetInjector, RunHTMLWidgetRenderer } from \"./htmlInjectionUtility\";\n\nenum VisualUpdateType {\n    Data = 2,\n    Resize = 4,\n    ViewMode = 8,\n    Style = 16,\n    ResizeEnd = 32,\n    All = 62,\n}\n\n// below is a snippet of a definition for an object which will contain the property values\n// selected by the users\n/*interface VisualSettings {\n    lineColor: string;\n}*/\n\n// to allow this scenario you should first the following JSON definition to the capabilities.json file\n// under the \"objects\" property:\n// \"settings\": {\n//     \"displayName\": \"Visual Settings\",\n//     \"description\": \"Visual Settings Tooltip\",\n//     \"properties\": {\n//         \"lineColor\": {\n//         \"displayName\": \"Line Color\",\n//         \"type\": { \"fill\": { \"solid\": { \"color\": true }}}\n//         }\n//     }\n// }\n\n// in order to improve the performance, one can update the <head> only in the initial rendering.\n// set to 'true' if you are using different packages to create the widgets\nconst updateHTMLHead: boolean = false;\nconst renderVisualUpdateType: number[] = [\n    VisualUpdateType.Resize,\n    VisualUpdateType.ResizeEnd,\n    VisualUpdateType.Resize + VisualUpdateType.ResizeEnd\n];\n\nexport class Visual implements IVisual {\n    private rootElement: HTMLElement;\n    private headNodes: Node[];\n    private bodyNodes: Node[];\n    private settings: VisualSettings;\n\n    public constructor(options: VisualConstructorOptions) {\n        if (options && options.element) {\n            this.rootElement = options.element;\n        }\n        this.headNodes = [];\n        this.bodyNodes = [];\n    }\n\n    public update(options: VisualUpdateOptions): void {\n\n        if (!options ||\n            !options.type ||\n            !options.viewport ||\n            !options.dataViews ||\n            options.dataViews.length === 0 ||\n            !options.dataViews[0]) {\n            return;\n        }\n        const dataView: DataView = options.dataViews[0];\n        this.settings = Visual.parseSettings(dataView);\n\n        let payloadBase64: string = null;\n        if (dataView.scriptResult && dataView.scriptResult.payloadBase64) {\n            payloadBase64 = dataView.scriptResult.payloadBase64;\n        }\n\n        if (renderVisualUpdateType.indexOf(options.type) === -1) {\n            if (payloadBase64) {\n                this.injectCodeFromPayload(payloadBase64);\n            }\n        } else {\n            this.onResizing(options.viewport);\n        }\n    }\n\n    public onResizing(finalViewport: IViewport): void {\n        /* add code to handle resizing of the view port */\n    }\n\n    private injectCodeFromPayload(payloadBase64: string): void {\n        // inject HTML from payload, created in R\n        // the code is injected to the 'head' and 'body' sections.\n        // if the visual was already rendered, the previous DOM elements are cleared\n\n        ResetInjector();\n\n        if (!payloadBase64) {\n            return;\n        }\n\n        // create 'virtual' HTML, so parsing is easier\n        let el: HTMLHtmlElement = document.createElement(\"html\");\n        try {\n            el.innerHTML = window.atob(payloadBase64);\n        } catch (err) {\n            return;\n        }\n\n        // if 'updateHTMLHead == false', then the code updates the header data only on the 1st rendering\n        // this option allows loading and parsing of large and recurring scripts only once.\n        if (updateHTMLHead || this.headNodes.length === 0) {\n            while (this.headNodes.length > 0) {\n                let tempNode: Node = this.headNodes.pop();\n                document.head.removeChild(tempNode);\n            }\n            let headList: NodeListOf<HTMLHeadElement> = el.getElementsByTagName(\"head\");\n            if (headList && headList.length > 0) {\n                let head: HTMLHeadElement = headList[0];\n                this.headNodes = ParseElement(head, document.head);\n            }\n        }\n\n        // update 'body' nodes, under the rootElement\n        while (this.bodyNodes.length > 0) {\n            let tempNode: Node = this.bodyNodes.pop();\n            this.rootElement.removeChild(tempNode);\n        }\n        let bodyList: NodeListOf<HTMLBodyElement> = el.getElementsByTagName(\"body\");\n        if (bodyList && bodyList.length > 0) {\n            let body: HTMLBodyElement = bodyList[0];\n            this.bodyNodes = ParseElement(body, this.rootElement);\n        }\n\n        RunHTMLWidgetRenderer();\n    }\n\n    private static parseSettings(dataView: DataView): VisualSettings {\n        return VisualSettings.parse(dataView) as VisualSettings;\n    }\n\n    /**\n     * This function gets called for each of the objects defined in the capabilities files and allows you to select which of the\n     * objects and properties you want to expose to the users in the property pane.\n     *\n     */\n    public enumerateObjectInstances(options: EnumerateVisualObjectInstancesOptions):\n        VisualObjectInstance[] | VisualObjectInstanceEnumerationObject {\n        return VisualSettings.enumerateObjectInstances(this.settings || VisualSettings.getDefault(), options);\n    }\n}\n","import * as DataViewObjects from \"./dataViewObjects\";\r\nexport class DataViewObjectsParser {\r\n    static getDefault() {\r\n        return new this();\r\n    }\r\n    static createPropertyIdentifier(objectName, propertyName) {\r\n        return {\r\n            objectName,\r\n            propertyName\r\n        };\r\n    }\r\n    static parse(dataView) {\r\n        let dataViewObjectParser = this.getDefault(), properties;\r\n        if (!dataView || !dataView.metadata || !dataView.metadata.objects) {\r\n            return dataViewObjectParser;\r\n        }\r\n        properties = dataViewObjectParser.getProperties();\r\n        for (let objectName in properties) {\r\n            for (let propertyName in properties[objectName]) {\r\n                const defaultValue = dataViewObjectParser[objectName][propertyName];\r\n                dataViewObjectParser[objectName][propertyName] = DataViewObjects.getCommonValue(dataView.metadata.objects, properties[objectName][propertyName], defaultValue);\r\n            }\r\n        }\r\n        return dataViewObjectParser;\r\n    }\r\n    static isPropertyEnumerable(propertyName) {\r\n        return !DataViewObjectsParser.InnumerablePropertyPrefix.test(propertyName);\r\n    }\r\n    static enumerateObjectInstances(dataViewObjectParser, options) {\r\n        let dataViewProperties = dataViewObjectParser && dataViewObjectParser[options.objectName];\r\n        if (!dataViewProperties) {\r\n            return [];\r\n        }\r\n        let instance = {\r\n            objectName: options.objectName,\r\n            selector: null,\r\n            properties: {}\r\n        };\r\n        for (let key in dataViewProperties) {\r\n            if (dataViewProperties.hasOwnProperty(key)) {\r\n                instance.properties[key] = dataViewProperties[key];\r\n            }\r\n        }\r\n        return {\r\n            instances: [instance]\r\n        };\r\n    }\r\n    getProperties() {\r\n        let properties = {}, objectNames = Object.keys(this);\r\n        objectNames.forEach((objectName) => {\r\n            if (DataViewObjectsParser.isPropertyEnumerable(objectName)) {\r\n                let propertyNames = Object.keys(this[objectName]);\r\n                properties[objectName] = {};\r\n                propertyNames.forEach((propertyName) => {\r\n                    if (DataViewObjectsParser.isPropertyEnumerable(objectName)) {\r\n                        properties[objectName][propertyName] =\r\n                            DataViewObjectsParser.createPropertyIdentifier(objectName, propertyName);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return properties;\r\n    }\r\n}\r\nDataViewObjectsParser.InnumerablePropertyPrefix = /^_/;\r\n//# sourceMappingURL=dataViewObjectsParser.js.map","import * as converterHelper from \"./converterHelper\";\r\nimport * as dataRoleHelper from \"./dataRoleHelper\";\r\nimport * as dataViewObject from \"./dataViewObject\";\r\nimport * as dataViewObjects from \"./dataViewObjects\";\r\nimport * as dataViewObjectsParser from \"./dataViewObjectsParser\";\r\nimport * as dataViewTransform from \"./dataViewTransform\";\r\nimport * as validationHelper from \"./validationHelper\";\r\nexport { converterHelper, dataRoleHelper, dataViewObject, dataViewObjects, dataViewObjectsParser, dataViewTransform, validationHelper };\r\n//# sourceMappingURL=index.js.map","import { Visual } from \"../../src/visual\";\r\nvar powerbiKey = \"powerbi\";\r\nvar powerbi = window[powerbiKey];\r\n\r\nvar spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871 = {\r\n    name: 'spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871',\r\n    displayName: 'spectrumplotPBviz',\r\n    class: 'Visual',\r\n    version: '1.0.0',\r\n    apiVersion: '2.6.0',\r\n    create: (options) => {\r\n        if (Visual) {\r\n            return new Visual(options);\r\n        }\r\n\r\n        console.error('Visual instance not found');\r\n    },\r\n    custom: true\r\n};\r\n\r\nif (typeof powerbi !== \"undefined\") {\r\n    powerbi.visuals = powerbi.visuals || {};\r\n    powerbi.visuals.plugins = powerbi.visuals.plugins || {};\r\n    powerbi.visuals.plugins[\"spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871\"] = spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871;\r\n}\r\n\r\nexport default spectrumplotPBviz7DEA5CA2058841A9BE801C6417758871;"],"sourceRoot":""}